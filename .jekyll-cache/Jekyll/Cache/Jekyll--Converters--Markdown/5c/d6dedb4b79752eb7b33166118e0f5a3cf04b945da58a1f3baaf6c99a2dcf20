I"/<p>안녕하세요! 갱입니다.</p>

<p>iOS 개발을 주제로 블로그를 하게 됐습니다. 😆</p>

<p>저는 소프트웨어 마에스트로 11기에서 iOS 네이티브 앱 개발을 공부하고 있는 중입니다.</p>

<p>전부터 iOS 개발을 하고있었지만 항상 IB를 이용해서 앱 개발을 했었지만 이번 소마 프로젝트에서는 모두 코드로만 개발하기를 시작했습니다.</p>

<p>IB를 이용해서 개발하다가 코드로만 하니 제가 자료 검색을 못하는 건지 내용이 많이 없는 것 같아요 ㅠㅠ</p>

<p>그래서 프로젝트 전체를 코드로 시작할 때 가장 먼저 해야 하는 작업을 포스팅 해보려고합니다.</p>

<p>제가 진행하는 환경은 Xcode 12, iOS 14 입니다!</p>

<p>그리고 제가 하는 방법은 iOS 13 이후부터 적용 가능한 방법입니다!</p>

<p>iOS 13 버전 이전 방법은 많은 타블로그에 작성되어있으니 참고해주시면 될 것 같습니다!</p>

<blockquote>
  <p>iOS Project Start Programmatically</p>
</blockquote>

<ol>
  <li>우선 프로젝트 내에 있는 Main.storyboard 파일을 지워주세요!</li>
</ol>

<p><img src="http://localhost:4000/assets/images/1/1.png" alt="1" /></p>

<p>그림 1) Main.storyboard 파일 지우기</p>

<ol>
  <li>그림 2에 표시되어 있는 부분의 내용을 지워주세요!</li>
</ol>

<p><img src="http://localhost:4000/assets/images/1/2.png" alt="2" /></p>

<p>그림 2) 삭제 전</p>

<p><img src="http://localhost:4000/assets/images/1/3.png" alt="3" /></p>

<p>그림 3) 삭제 후</p>

<ol>
  <li>Info.plist 에 가서 관련 내용을 삭제한다.</li>
</ol>

<p><img src="http://localhost:4000/assets/images/1/4.png" alt="4" /></p>

<p>그림 4) Info.plist</p>

<p>Info.plist 파일을 보면 Application Scene Manifest -&gt; Scene Configuration -&gt; Application Session Role -&gt; Item 0 -&gt; Storyboard Name 을 지워주시면 됩니다!</p>

<ol>
  <li>SceneDelegate 수정</li>
</ol>

<p>이제 SceneDelegate.swift 에서 내용을 추가해야합니다! 여기서 iOS 13 버전 이후에서 달라진 점입니다. 그 전에는 AppDelegate.swift 파일을 수정했지만 iOS 13 이후에는 SceneDelegate에서 코드를 추가해야 하더라고요… 왜 안되지 하면서 2시간 동안 헤맸던거 같습니다.😂</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">func</span> <span class="nx">scene</span><span class="p">(</span><span class="nx">_</span> <span class="nx">scene</span><span class="p">:</span> <span class="nx">UIScene</span><span class="p">,</span> <span class="nx">willConnectTo</span> <span class="nx">session</span><span class="p">:</span> <span class="nx">UISceneSession</span><span class="p">,</span> <span class="nx">options</span> <span class="nx">connectionOptions</span><span class="p">:</span> <span class="nx">UIScene</span><span class="p">.</span><span class="nx">ConnectionOptions</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span>
    <span class="c1">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span>
    <span class="c1">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span>
    <span class="nx">guard</span> <span class="kd">let</span> <span class="nx">windowScene</span> <span class="o">=</span> <span class="p">(</span><span class="nx">scene</span> <span class="k">as</span><span class="p">?</span> <span class="nx">UIWindowScene</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
    
    <span class="nb">window</span> <span class="o">=</span> <span class="nx">UIWindow</span><span class="p">(</span><span class="nx">frame</span><span class="p">:</span> <span class="nx">windowScene</span><span class="p">.</span><span class="nx">coordinateSpace</span><span class="p">.</span><span class="nx">bounds</span><span class="p">)</span>
    <span class="nb">window</span><span class="p">?.</span><span class="nx">windowScene</span> <span class="o">=</span> <span class="nx">windowScene</span>
    <span class="nb">window</span><span class="p">?.</span><span class="nx">rootViewController</span> <span class="o">=</span> <span class="nx">ViewController</span><span class="p">()</span>
    <span class="nb">window</span><span class="p">?.</span><span class="nx">makeKeyAndVisible</span><span class="p">()</span>
    
<span class="p">}</span>
</code></pre></div></div>

<p>scene(_ scene: session: connectionOptions:) 함수에 위와 같은 코드를 추가해주시면 됩니다!</p>

<p>코드를 간단히 살펴보면</p>

<p>우선 scene 함수에 가장 먼저 있던 코드인 guard문에서 선언한 상수의 이름을 만들어 주었습니다. 왜냐하면 guard 문에서 선언한 상수를 저희는 사용해야 합니다!</p>

<p>우선 window의 값을 변경해줍니다.</p>

<p>근데 왜 window는 앞에 let/var 키워드 안붙이나요!? 하시는 분이 있지는 않겠죠? 있으시다면 댓글 남겨주시면 알려드리겠습니다!</p>

<p>그리고 window의 windowScene 속성을 guard 문에서 선언한 상수를 넣어줍니다.</p>

<p>그리고 window의 rootViewController를 ViewController로 적용해줍니다</p>

<p>그리고 마지막으로 window?.makeKeyAndVisible()을 작성합니다.</p>

<p>해당 함수의 Apple Dev Documation을 살펴보면</p>

<p><img src="http://localhost:4000/assets/images/1/5.png" alt="5" /></p>

<p>현재 창을 표시하고 같은 수준 이하의 다른 모든 창 앞에 배치하는 메소드입니다!</p>

<p>ViewController.swift에는 간단하게 backgroundColor만 넣어주시고 시뮬레이터를 통해 확인해보면!</p>

<p><img src="http://localhost:4000/assets/images/1/6.png" alt="6" /></p>

<p>이렇게 인터페이스 빌더 없이 코드로만 만들 수 있습니다!</p>

<p>다른 분들이 이 글을 보시고 도움이 되셨으면 좋겠습니다!</p>

<p>다음 글은 UITabBarController를 코드로 작성하는 방법을 포스팅할 예정입니다!</p>

<p>감사합니다!</p>

<p>뿅 🤭</p>
:ET